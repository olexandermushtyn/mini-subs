version: '3.9'

services:
  redis:
    image: redis:7
    ports: ['6379:6379']
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 10

  pg-auth:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth
    ports: ['5433:5432']
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 5s
      timeout: 5s
      retries: 10

  pg-subs:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: subscriptions
    ports:
      - '5434:5432'
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 2s
      timeout: 1s
      retries: 15

  auth-svc:
    build:
      context: ..
      dockerfile: services/auth-svc/Dockerfile
    env_file:
      - ../services/auth-svc/.env
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:postgres@pg-auth:5432/auth
    depends_on:
      pg-auth:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - '3000:3000'

  subscriptions-svc:
    build:
      context: ..
      dockerfile: services/subscriptions-svc/Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:postgres@pg-subs:5432/subscriptions
      - PORT=3001
    ports:
      - '3001:3001'
    depends_on:
      pg-subs:
        condition: service_healthy
      redis:
        condition: service_healthy
